//TEST PLATFORM

// DATA SECTION
// Load the date as before
let myData = JSON.parse(dataReq.responseText);

// Put all data in one array
let subsList = [];
for (let key in myData) {
    subsList.push(`${myData[key].filters.actSubs}`);
}

// Remove the empty values in the array  
subsList = Object.entries(subsList).reduce((a,[k,v]) => (v ? (a[k]=v, a) : a), {});

// Cleared the 0,1,2,3 structure (Dramatic decrease in the number of values here, why?)
subsList = Object.values(subsList);

// CONVERT THE STRING TO ARRAY, FREE FROM THE COMMAS AND THEN MAKE IT A STRING AGAIN
subsList = subsList.join(',').split(",");

// Alphabetical order
subsList.sort();

// Delete duplicates
subsList = [...new Set(subsList)];

// DATA SECTION ENDS

// INDEX.PUG SECTION
// Create array to fill in
let listArray = [];
// Let the code do the magic to fill the array
Array.from(document.querySelector("#actSubs").options).forEach(function(option_element) {
    let option_value = option_element.value;
    listArray.push(option_value);

    // This code below may work for me later to detect the selected options
    // let is_option_selected = option_element.selected;
    // console.log('Option Selected : ' + (is_option_selected === true ? 'Yes' : 'No'));

    // console.log("\n\r");
});

// Remove the empty values in the array
listArray = Object.entries(listArray).reduce((a,[k,v]) => (v ? (a[k]=v, a) : a), {});

// Cleared the 0,1,2,3 structure
listArray = Object.values(listArray);

// Alphabetical order
listArray.sort();

// Delete duplicates (shouldn't be any)
listArray = [...new Set(listArray)];

// INDEX.PUG SECTION ENDS

// SPOT THE DIFFERENCE
let difference = subsList.filter(x => !listArray.includes(x));
console.log(difference);

let difference02 = listArray.filter(x => !subsList.includes(x));
console.log(difference02);
// SPOT THE DIFFERENCE ENDS

/*
// WHAT ABOUT WHEN WE SWITCH TO CHIPS
var chipInstance = M.Chips.getInstance($('#actChips'));
let data = chipInstance.options.autocompleteOptions.data;
data = Object.keys(data);
// TEST PLATFORM ENDS
*/

// TRENDS SECTION
let rowData = JSON.parse(dataReq.responseText);
let rowDataNumber = rowData.length;

searchObj = {
    actSubs: [],
    indication: [],
    statedClass: [],
    studyDesign: [],
    setting: [],
    ward: [],
    numPatients: [],
    numPrescriptions: [],
    studyLength: [],
    criteriaMethod: [],
    country: [],
    year: [],
    pediatrics: [],
    geriatrics: [],
    neonatology: [],
    oncology: [],
    pharmacogenetics: [],
    pharmacoeconomy: [],
    radiopharmaceuticals: [],
    compounding: [],
    medicalDevices: [],
    personalized: [],
    nutrition: [],
    highRisk: [],
    endOfLife: [],
    selfMedication: [],
    preopMedication: [],
    outpatient: [],
    enzymeSubstrate: [],
    geneTherapy: [],
    homeCare: [],
    antibioticProphylaxis: [],
    painManagement: [],
    offLabel: [],
    flatDoses: [],
    switching: [],
    deprescribing: [],
    prepareIV: [],
    costAnalysis: [],
    riskSafety: [],
    vigilance: [],
    stability: [],
    drugMonitoring: [],
    safetyProfile: [],
    intervention: [],
    patientIntervention: [],
    nursesReccomend: [],
    questPatient: [],
    questProfessional: [],
    selection: [],
    stock: [],
    autoDispensing: [],
    coldChain: [],
    softwareAided: [],
    mobileVR: [],
    Printing3D: [],
    socialMedia: [],
    shortages: [],
    adverseEvents: [],
    adherence: [],
    resistance: [],
    renal: [],
    errors: [],
    administrative: [],
    stewardship: [],
    policiesAudits: [],
    multidisciplinary: [],
    institutional: [],
    recalls: [],
    education: [],
    clinicalTrials: [],
    youngPharma: [],
    nextStep: []
};

let actArray = [
    "5-azacitidine",
    "Abacavir",
    "Abacavir / Dolutegravir / Lamivudine",
    "Abatacept",
    "Abemaciclib",
    "Abiraterone",
    "Acenocoumarol",
    "Acetaminophen",
    "Acetylsalicylic acid",
    "Acitretin",
    "Acyclovir",
    "Adalimumab",
    "Adrenaline",
    "Adriamycin",
    "Afatinib",
    "Aflibercept",
    "Albendazole",
    "Alectinib",
    "Alemtuzumab",
    "Alendronate",
    "Alendronic acid",
    "Alendronic acid / Colecalciferol",
    "Alirocumab",
    "Allopurinol",
    "Alprazolam",
    "Alprostadil",
    "Amikacin",
    "Amiodarone",
    "Amisulpiride",
    "Amitriptyline",
    "Amlodipin",
    "Ammonium tetrathiomolybdate",
    "Amoxicillin",
    "Amoxicillin / Clavulanic acid",
    "Amphotericin",
    "Ampicillin",
    "Anakinra",
    "Anlotinib",
    "Antithrombin III",
    "Antithymocyte Globulin (Rabbit)",
    "Apixaban",
    "Apremilast",
    "Aripiprazole",
    "Arsenic trioxide",
    "Artemisinin",
    "Artesunate",
    "Atenolol",
    "Atezolizumab",
    "Atorvastatin",
    "Atracurium",
    "Atropine",
    "Avibactam",
    "Azathioprine",
    "Azithromycin",
    "Aztreonam",
    "BCG Vaccine (Tice strain)",
    "Baricitinib",
    "Basiliximab",
    "Bazedoxifene",
    "Beclametasone",
    "Belimumab",
    "Belinostat",
    "Bendamustine",
    "Benralizumab",
    "Benzydamine",
    "Betamethasone",
    "Bevacizumab",
    "Bezlotoxumab",
    "Bicalutamide",
    "Bleomycin",
    "Blinatumomab",
    "Boric Acid",
    "Bortezomib",
    "Bosutinib",
    "Botulinum Toxin",
    "Brentuksimab vedotin",
    "Brodalumab",
    "Budesonide",
    "Bupivacaine",
    "Cabazitaxel",
    "Cabozantinib",
    "Caffeine",
    "Calcifediol",
    "Calcipotriol",
    "Calcipotriol / Betamethasone",
    "Calcium carbonate",
    "Calcium citrate",
    "Calcium folinate",
    "Calcium phosphate",
    "Camphor",
    "Canagliflozin",
    "Canakinumab",
    "Candesartan",
    "Cannabidiol",
    "Capecitabine",
    "Captopril",
    "Carbamazepine",
    "Carboplatinum",
    "Carfilzomib",
    "Carvedilol",
    "Caspofungin",
    "Cefazolin",
    "Cefepime",
    "Cefotaxime",
    "Ceftaroline",
    "Ceftazidime",
    "Ceftazidime / Avibactam",
    "Ceftobiprole",
    "Ceftolozane",
    "Ceftolozane / Tazobactam",
    "Ceftriaxone",
    "Cefuroxime",
    "Cenegermin",
    "Certolizumab",
    "Cetuximab",
    "Charcoal",
    "Chloral Hydrate",
    "Chlorambucil",
    "Chlorhexidine",
    "Chlorphenamine",
    "Ciclosporin",
    "Cidofovir",
    "Cinoxacin",
    "Ciprofloxacin",
    "Cisplatinum",
    "Citalopram",
    "Cladribine",
    "Clarithromycin",
    "Clavulanic acid",
    "Clindamycin",
    "Clobazam",
    "Clobetasol",
    "Clonazepam",
    "Clopidogrel",
    "Clorazepate dipotassium",
    "Clorfenamin",
    "Clotiapine",
    "Cloxacillin",
    "Clozapine",
    "Cobicistat",
    "Cobimetinib",
    "Codeine",
    "Colchicine",
    "Colecalciferol",
    "Colistin",
    "Cotrimoxazole",
    "Crizotinib",
    "Cyamemazine",
    "Cyclophosphamide",
    "Cyclosporine",
    "Cytarabine",
    "Dabigatran",
    "Dabrafenib",
    "Dacarbazine",
    "Daclatasvir",
    "Dactynomicin",
    "Dalbavancin",
    "Dalteparin",
    "Danazol",
    "Dapagliflozin",
    "Daptomycin",
    "Daratumumab",
    "Darbepoetin",
    "Darunavir",
    "Darunavir / Cobicistat / Emtricitabine / Tenofovir alafenamide",
    "Darunavir / Ritonavir",
    "Dasabuvir",
    "Dasatinib",
    "Daunorubicin",
    "Decitabine",
    "Delta-9-tetrahydrocannabinol",
    "Denosumab",
    "Desmopressin",
    "Dexamethasone",
    "Dexchlorpheniramine",
    "Dexmedetomidine",
    "Dextrose",
    "Diazepam",
    "Diclofenac",
    "Didanosine",
    "Digoxin",
    "Dihydroartemisin",
    "Diltiazem",
    "Dimethyl fumarate",
    "Dipyrone",
    "Disodium tetraborate",
    "Dobutamine",
    "Docetaxel",
    "Dolutegravir",
    "Domperidone",
    "Donepezil",
    "Dopamine",
    "Dornase alfa",
    "Doxepin",
    "Doxorubicin",
    "Doxycycline",
    "Dulanermin",
    "Duloxetine",
    "Dupilumab",
    "Durvalumab",
    "Econazole",
    "Eculizumab",
    "Edoxaban",
    "Efalizumab",
    "Efavirenz",
    "Efmoroctocog alfa",
    "Elbasvir",
    "Elbasvir / Grazoprevir",
    "Eltrombopag",
    "Elvitegravir",
    "Empagliflocin",
    "Emtricitabine",
    "Emtricitabine / Tenofovir alafenamide / Cobicistat / Darunavir",
    "Emtricitabine / Tenofovir alafenamide / Elvitegravir / Cobicistat",
    "Emtricitabine / Tenofovir alafenamide / Rilpivirine",
    "Emtricitabine / Tenofovir disoproxil",
    "Emtricitabine / Tenofovir disoproxil / Efavirenz",
    "Emtricitabine / Tenofovir disoproxil / Elvitegravir",
    "Emtricitabine / Tenofovir disoproxil / Elvitegravir / Cobicistat",
    "Emtricitabine / Tenofovir disoproxil / Rilpivirine",
    "Enalapril",
    "Enoxaparin",
    "Enzalutamide",
    "Epinephrine bitartrate",
    "Epirubicin",
    "Epoetin alpha",
    "Epoetin beta",
    "Eptinezumab",
    "Erenumab",
    "Eribulin",
    "Erlotinib",
    "Ertapenem",
    "Erythropoietin",
    "Escitalopram",
    "Esomeprazole",
    "Etanercept",
    "Ethinylestradiol",
    "Etidronate",
    "Etilefrine",
    "Etoposide",
    "Everolimus",
    "Evolocumab",
    "Exemestane",
    "Ezetimibe",
    "Factor VIII",
    "Factor VIII (Recombinant)",
    "Famotidine",
    "Fampridine",
    "Febuxostat",
    "Fentanyl",
    "Ferric carboxymaltose",
    "Ferrous fumarate",
    "Ferrous gluconate",
    "Ferrous sulphate",
    "Fibrinogen",
    "Fidaxomicin",
    "Filgrastim",
    "Fingolimod",
    "Flecainide acetate",
    "Fluconazole",
    "Flucytosine",
    "Flumequine",
    "Fluorouracil (5-FU)",
    "Flupentixol",
    "Fluticasone",
    "Fluvastatin",
    "Foscarnet",
    "Fosfomycin",
    "Fremanezumab",
    "Fructose",
    "Fulvestrant",
    "Furosemide",
    "Gabapentin",
    "Galantamine",
    "Ganciclovir",
    "Gefitinib",
    "Gemcitabine",
    "Gentamicin",
    "Glacanezumab",
    "Glatiramer acetate",
    "Glecaprevir",
    "Glecaprevir / Pibrentasvir",
    "Glucagon",
    "Glucose",
    "Glutamine",
    "Glutathione",
    "Golimumab",
    "Grazoprevir",
    "Growth hormone",
    "Guselkumab",
    "Haloperidol",
    "Heparin",
    "Honey Bee Venom",
    "Human albumin",
    "Human fibrinogen / Human thrombin",
    "Hyaluronic acid",
    "Hydrochlorothiazide",
    "Hydrocortisone",
    "Hydromorphone",
    "Hydroxychloroquine",
    "Hydroxyzine",
    "Hyoscine",
    "Ibandronate",
    "Ibrutinib",
    "Ibuprofen",
    "Idarubicin",
    "Idelalisib",
    "Ifosfamide",
    "Imatinib",
    "Imidazole",
    "Imiglucerase",
    "Imipenem",
    "Imipenem / Cilastatin",
    "Imiquimod",
    "Immunoglobulin",
    "Immunoglobulin (IVIg)",
    "Infliximab",
    "Inotuzumab / Ozogamicin",
    "Insulin aspart",
    "Insulin degludec",
    "Insulin glargine",
    "Insulin lispro",
    "Interferon",
    "Interferon (Pegylated)",
    "Interferon beta",
    "Iopromide",
    "Ipilimumab",
    "Irinotecan",
    "Iron",
    "Iron sucrose",
    "Isavuconazole",
    "Isoniazid / Pyrazinamide / Rifampicin",
    "Itraconazole",
    "Ixazomib",
    "Ixekizumab",
    "Ketamine",
    "Labetalol",
    "Lacosamide",
    "Lamivudine",
    "Lamivudine / Abacavir",
    "Lamotrigine",
    "Lansoprazole",
    "Lapatinib",
    "Latanoprost",
    "Ledipasvir",
    "Ledipasvir / Sofosbuvir",
    "Leflunomide",
    "Lenalidomide",
    "Lenvatinib",
    "Letrozole",
    "Levetiracetam",
    "Levocabastine",
    "Levofloxacin",
    "Levomepromazine",
    "Levothyroxine",
    "Lidocaine hydrochloride",
    "Linezolid",
    "Liraglutide",
    "Lithium",
    "Lithium carbonate",
    "Lomefloxacin",
    "Lonoctocog alfa",
    "Loperamide",
    "Lopinavir",
    "Lopinavir / Ritonavir",
    "Lorazepam",
    "Losartan",
    "Loxapine",
    "Lurasidone",
    "Lysine acetylsalicylate",
    "Magnesium sulphate",
    "Manidipine",
    "Melphalan",
    "Memantine",
    "Mepivacaine",
    "Mepolizumab",
    "Mercaptopurine",
    "Meropenem",
    "Mesalamine",
    "Metamizole",
    "Metformin",
    "Methadone",
    "Methotrexate",
    "Methylprednisolone",
    "Metoclopramide",
    "Metronidazole",
    "Micafungin",
    "Micophenolate",
    "Midazolam",
    "Midostaurin",
    "Miglustat",
    "Misoprostole",
    "Mitomycin C",
    "Montelukast",
    "Morphine",
    "Moxifloxacin",
    "Mupirocin",
    "Mycophenolate",
    "Nab-paclitaxel",
    "Nadroparin",
    "Naftidrofuryl",
    "Nalidixic acid",
    "Naloxone",
    "Natalizumab",
    "Nicardipine",
    "Nicorandil",
    "Nifedipine",
    "Nilotinib",
    "Nintedanib",
    "Niraparib",
    "Nitrazepam",
    "Nitroglycerin",
    "Nivolumab",
    "Norepinephrine",
    "Norfloxacin",
    "Nusinersen",
    "Nystatin",
    "Obeticholic acid",
    "Obinotuzumab",
    "Ocrelizumab",
    "Octreotide",
    "Ofloxacin",
    "Olanzapine",
    "Olaparib",
    "Olaratumab",
    "Omalizumab",
    "Ombitasvir",
    "Ombitasvir / Paritaprevir / Ritonavir",
    "Ombitasvir / Paritaprevir / Ritonavir / Dasabuvir",
    "Omeprazole",
    "Ondansetron",
    "Oseltamivir",
    "Osimertinib",
    "Oxacillin",
    "Oxaliplatinum",
    "Oxazepam",
    "Oxcarbazepine",
    "Oxybutinin",
    "Oxycodone",
    "Paclitaxel",
    "Palbociclib",
    "Paliperidone",
    "Palivizumab",
    "Panitumumab",
    "Pantoprazole",
    "Paracetamol",
    "Paritaprevir",
    "Parnaparin",
    "Paroxetine",
    "Pazopanib",
    "Pefloxacin",
    "Pegaspargase",
    "Pembrolizumab",
    "Pemetrexed",
    "Penicillin G",
    "Perphenazine",
    "Pertuzumab",
    "Pethidine",
    "Phenobarbital",
    "Phenol",
    "Phenprocoumon",
    "Phenylephrine hydrochloride",
    "Phenytoin",
    "Phytomenadione",
    "Phytonadione",
    "Pibrentasvir",
    "Pipemidic acid",
    "Piperacillin",
    "Piperacillin / Tazobactam",
    "Piperaquine",
    "Piperaquine / Dihydroartemisin",
    "Pirfenidone",
    "Piritramide",
    "Pitavastatin",
    "Plasma (Platelet Rich)",
    "Plasma (Rich In Growth Factors)",
    "Platin",
    "Pomalidomide",
    "Ponatinib",
    "Posaconazole",
    "Potassium bicarbonate",
    "Potassium chloride",
    "Prazosine",
    "Prednisone",
    "Propofol",
    "Propranolol",
    "Protamine",
    "Prothrombin complex concentrate",
    "Prulifloxacin",
    "Pseudoephedrine",
    "Quetiapine",
    "Rabeprazole",
    "Radium-223 dichloride",
    "Raloxifene",
    "Raltegravir",
    "Raltitrexed",
    "Ramipril",
    "Ramucirumab",
    "Ranibizumab",
    "Ranitidine",
    "Ranolazine",
    "Regorafenib",
    "Remifentanil",
    "Reslizumab",
    "Resorcinol",
    "Ribavirin",
    "Ribociclib",
    "Rifampicin",
    "Rilpivirine",
    "Risedronate",
    "Risperidone",
    "Ritonavir",
    "Rituximab",
    "Rivaroxaban",
    "Rivastigmine",
    "Ropivacaine",
    "Rosuvastatin",
    "Rufloxacin",
    "Rurioctocog alfa pegol",
    "Ruxolitinib",
    "Sacubitril",
    "Sacubitril / Valsartan",
    "Salbutamol",
    "Salmeterol",
    "Sarilumab",
    "Sebelipase alfa",
    "Secukinumab",
    "Sertraline",
    "Sildenafil",
    "Simeprevir",
    "Simvastatin",
    "Simvastatin / Cholesterol (TFSC)",
    "Sirolimus",
    "Situximab",
    "Sodium Ferric Gluconate",
    "Sodium benzoate",
    "Sodium chloride",
    "Sodium glycerophosphate",
    "Sodium metabisulfite",
    "Sodium nitroprusside",
    "Sofosbuvir",
    "Sofosbuvir / Daclatasvir",
    "Sofosbuvir / Simeprevir",
    "Sofosbuvir / Velpatasvir",
    "Sofosbuvir / Velpatasvir / Voxilaprevir",
    "Somatostatin",
    "Sorafenib",
    "Spironolactone",
    "Sucralfate",
    "Sufentanil",
    "Sulbactam",
    "Sulfamethoxazole",
    "Sulfasalazine",
    "Sunitinib",
    "Suxamethonium",
    "Tacrolimus",
    "Talazoparib",
    "Taliglucerase alfa",
    "Tamoxifen",
    "Tapentadol",
    "Tazarotene",
    "Tazobactam",
    "Tedizolid",
    "Teicoplanin",
    "Telmisartan",
    "Tenofovir",
    "Tenofovir alafenamide",
    "Tenofovir disoproxil",
    "Teriflunomide",
    "Teriparatide",
    "Terlipressin",
    "Tetracaine hydrochloride",
    "Thalidomide",
    "Theophylline",
    "Thiamine",
    "Thymoglobulin",
    "Tigecycline",
    "Tinzaparin sodium",
    "Tipiracil",
    "Tivozanib",
    "Tobramycin",
    "Tocilizumab",
    "Tofacitinib",
    "Tolterodine",
    "Tolvaptan",
    "Topiramate",
    "Trabectedina",
    "Tramadol",
    "Trametinib",
    "Tranexamic acid",
    "Trastuzumab",
    "Trastuzumab emtansine",
    "Trazodone",
    "Tretinoin",
    "Triamcinolone",
    "Trientine",
    "Trifluridine",
    "Trifluridine / Tipiracil",
    "Trimethoprim",
    "Trimethoprim / Sulfamethoxazole",
    "Tuberculin",
    "Urea",
    "Ursodeoxycholic acid",
    "Ustekinumab",
    "Valproic acid",
    "Valsartan",
    "Vancomycin",
    "Vedolizumab",
    "Vedotin",
    "Velaglucerase alfa",
    "Velpatasvir",
    "Vemurafenib",
    "Venetoclax",
    "Venlafaxine",
    "Verapamil",
    "Vincristine",
    "Vinorelbine",
    "Vismodegib",
    "Vitamin C",
    "Vitamin D",
    "Voriconazole",
    "Voxilaprevir",
    "Warfarin",
    "Zinc",
    "Ziprasidone",
    "Ziv-Aflibercept",
    "Zoledronic acid",
    "Zolpidem",
    "Zoplicona",
    "Zuclopenthixol"
]

for (let key in actArray) {
    searchObj.actSubs = [`${actArray[key]}`];
    // LET THE CODE DO THE MAGIC
    const filterEngine = Object.values(searchObj).flat();

    let result = rowData.filter(({filters}) => {
      const objFilters = Object.values(filters).flat();
      return filterEngine.every(val => objFilters.includes(val));
    });

    if (rowDataNumber/100 < result.length) {
        console.log(`${actArray[key]}`);
    };
}

// FIND THE RESULT NUMBERS FOR EVERY SECTION
let rowData = JSON.parse(dataReq.responseText);

searchObj = {
    actSubs: [],
    indication: [],
    statedClass: [],
    studyDesign: [],
    setting: [],
    ward: [],
    numPatients: [],
    numPrescriptions: [],
    studyLength: [],
    criteriaMethod: [],
    country: [],
    year: [],
    pediatrics: [],
    geriatrics: [],
    neonatology: [],
    oncology: [],
    pharmacogenetics: [],
    pharmacoeconomy: [],
    radiopharmaceuticals: [],
    compounding: [],
    medicalDevices: [],
    personalized: [],
    nutrition: [],
    highRisk: [],
    endOfLife: [],
    selfMedication: [],
    preopMedication: [],
    outpatient: [],
    enzymeSubstrate: [],
    geneTherapy: [],
    homeCare: [],
    antibioticProphylaxis: [],
    painManagement: [],
    offLabel: [],
    flatDoses: [],
    switching: [],
    deprescribing: [],
    prepareIV: [],
    costAnalysis: [],
    riskSafety: [],
    vigilance: [],
    stability: [],
    drugMonitoring: [],
    safetyProfile: [],
    intervention: [],
    patientIntervention: [],
    nursesReccomend: [],
    questPatient: [],
    questProfessional: [],
    selection: [],
    stock: [],
    autoDispensing: [],
    coldChain: [],
    softwareAided: [],
    mobileVR: [],
    Printing3D: [],
    socialMedia: [],
    shortages: [],
    adverseEvents: [],
    adherence: [],
    resistance: [],
    renal: [],
    errors: [],
    administrative: [],
    stewardship: [],
    policiesAudits: [],
    multidisciplinary: [],
    institutional: [],
    recalls: [],
    education: [],
    clinicalTrials: [],
    youngPharma: [],
    nextStep: []
};

for (let key in toolsArray) {
    searchObj.criteriaMethod = [`${toolsArray[key]}`];
    // LET THE CODE DO THE MAGIC
    const filterEngine = Object.values(searchObj).flat();

    let result = rowData.filter(({filters}) => {
      const objFilters = Object.values(filters).flat();
      return filterEngine.every(val => objFilters.includes(val));
    });

    console.log(`${toolsArray[key]} is ${result.length}.`);
}

// SORT RESULTS BY NUMBER FOR THE SELECTED SECTION
let rowData = JSON.parse(dataReq.responseText);

searchObj = {
    actSubs: [],
    indication: [],
    statedClass: [],
    studyDesign: [],
    setting: [],
    ward: [],
    numPatients: [],
    numPrescriptions: [],
    studyLength: [],
    criteriaMethod: [],
    country: [],
    year: [],
    pediatrics: [],
    geriatrics: [],
    neonatology: [],
    oncology: [],
    pharmacogenetics: [],
    pharmacoeconomy: [],
    radiopharmaceuticals: [],
    compounding: [],
    medicalDevices: [],
    personalized: [],
    nutrition: [],
    highRisk: [],
    endOfLife: [],
    selfMedication: [],
    preopMedication: [],
    outpatient: [],
    enzymeSubstrate: [],
    geneTherapy: [],
    homeCare: [],
    antibioticProphylaxis: [],
    painManagement: [],
    offLabel: [],
    flatDoses: [],
    switching: [],
    deprescribing: [],
    prepareIV: [],
    costAnalysis: [],
    riskSafety: [],
    vigilance: [],
    stability: [],
    drugMonitoring: [],
    safetyProfile: [],
    intervention: [],
    patientIntervention: [],
    nursesReccomend: [],
    questPatient: [],
    questProfessional: [],
    selection: [],
    stock: [],
    autoDispensing: [],
    coldChain: [],
    softwareAided: [],
    mobileVR: [],
    Printing3D: [],
    socialMedia: [],
    shortages: [],
    adverseEvents: [],
    adherence: [],
    resistance: [],
    renal: [],
    errors: [],
    administrative: [],
    stewardship: [],
    policiesAudits: [],
    multidisciplinary: [],
    institutional: [],
    recalls: [],
    education: [],
    clinicalTrials: [],
    youngPharma: [],
    nextStep: []
};

// Create a blank object to fill-in below
let toolsObject = {};

for (let key in toolsArray) {
    searchObj.criteriaMethod = [`${toolsArray[key]}`];
    // LET THE CODE DO THE MAGIC
    const filterEngine = Object.values(searchObj).flat();

    let result = rowData.filter(({filters}) => {
      const objFilters = Object.values(filters).flat();
      return filterEngine.every(val => objFilters.includes(val));
    });

    // Fill the object with the names = result numbers
    toolsObject[`${toolsArray[key]}`] = `${result.length}`;
}

// console.log(toolsObject);

// sort the whole array by the values (top --> down)
let sortedTools = Object.entries(toolsObject)
    .sort(([,a],[,b]) => b-a)
    .reduce((r, [k, v]) => ({ ...r, [k]: v }), {});

// Get the names and values from the object as arrays
// Then take the top-5    
let topToolsName = Object.keys(sortedTools);
topToolsName = topToolsName.slice(0, 5);
let topToolsValues = Object.values(sortedTools);
topToolsValues = topToolsValues.slice(0, 5);

console.log(topToolsName);
console.log(topToolsValues);



/*
toolsSorted = Object.keys(toolsObject).sort(function(a,b){return toolsObject[b]-toolsObject[a]});
*/

// Find duplicates in totalArray
let findDuplicates = arr => arr.filter((item, index) => arr.indexOf(item) != index)
console.log(findDuplicates(totalArray));

for (let key in test) {
    if (test[key].length > 0) {
        console.log(test[key]);
    }
}